# help
alias csc="nvim ~/chuboe-system-configurator/.my_bash"
csc="chuboe-system-configurator/.my_bash"
# ze $csc -- opens this file in zellij

# write commands to history immediately
shopt -s histappend
PROMPT_COMMAND='history -a;history -n'

# source project details
FILE=~/chuboe-system-configurator/.bash_this_server
if [ -f "$FILE" ]; then
    source "$FILE"
fi
# example contents of .bash_this_server to point a different database host
# THIS_SERVER_HOST=" -h 10.100.2.49"

# use vim style key bindings with the terminal command prompt
set -o vi

# add timestamp to history
export HISTTIMEFORMAT="%d/%m/%y %T "

# open file from command
alias o="xdg-open"
# reference: https://superuser.com/questions/544272/how-to-open-file-with-default-program-from-command-line

# alias for psql assuming iDempiere
alias psqli="export PAGER='nvim -f -R -'; psql -d idempiere -U adempiere $THIS_SERVER_HOST"

# proper way to run a psli script
# ref: http://petereisentraut.blogspot.com/2010/03/running-sql-scripts-with-psql.html
alias psqli-script="PGOPTIONS='--client-min-messages=warning' psqli -X -q -a -1 -v ON_ERROR_STOP=1 --pset pager=off --pset expanded=auto $THIS_SERVER_HOST"

# alias for sudo assuming iDempiere
alias sudoi="sudo -u idempiere "

# change default editor to vim
export EDITOR=nvim

# create alias for read only vim. Use the following to edit and write:
# :set modifiable write
alias v="nvim -M "
alias vim="nvim"

# create ll alias (needed for debian)
alias ll="ls -al"

# create ll -tr alias
alias ltr="ll -trh "

# create hg pull -u alias
alias hgpu="hg pull -u "
alias hgst="hg status "
alias hgco="hg commit -m "

# create hg pull -u alias
#alias gp="git pull  "
#alias gpu="git push -u origin main "
#alias gpu_master="git push -u origin master "
alias gs="git status "
alias gd="git diff "
alias ga="git add . "
alias gc="git commit -m "
#alias gac="git commit -am "
function gp() {
    git add --all && \
    git commit -m "$1" && \
    git pull --rebase && \
    git status && \
    git push
}

git config --global credential.helper 'cache --timeout 7200000'

# zellij helpers
# temporarily disabling to allow for zellij bash completiongs
#alias z="zellij"
#alias zr="zellij run"
#alias ze="zellij edit"
#alias zrf="zellij run --floating"
#alias zef="zellij edit --floating"
#alias zcs="zellij --session chuck-steak "

# TMUX helpers
ta() {
  history -a
  tmux attach -t $*
  if [ "$?" == "1" ];
  then
    tmux new-session -s $*
  fi
}

# tmux shortcut
alias t="ta steak"

# write tmux session to file
alias t-save="tmux capture-pane -pS -100000 &> "

# write tmux current screen to file
alias t-snap="tmux capture-pane -p &> "

# tmux list sessions
alias tls="tmux list-sessions"

# disconnect
# ctrl+space d

# common cd commands
alias cdoc="cd /opt/chuboe/idempiere-installation-script/"
alias cdocb="cd /opt/chuboe/idempiere-installation-script/chuboe_backup/"
alias cdocu="cd /opt/chuboe/idempiere-installation-script/utils/"
alias cdoi="cd /opt/idempiere-server/"
alias cdoiu="cd /opt/idempiere-server/utils"
alias cdoil="cd /opt/idempiere-server/log"

# create directory if not exists and move to that directory
take ()
{
    mkdir -p -- "$1" &&
      cd -P -- "$1"
}

# buku
alias b="buku"

# add new from command line
alias ba="buku -a"

# add new from editor
# also edit based on id => example: bw 351
alias bw="buku -w"

# list bookmarks
#alias bp="buku -p"
# removed because clashes with bp copy/paste command

# open bookmark with no prompt
alias bo="buku --oa --np"

# open bookmark with no prompt and exit
boe ()
{
    buku --oa --np $1; exit;
}

# list tags
alias bt="buku --stag"

# search - regex
alias bs="buku -r"

# delete
alias bd="buku --delete"

# incus shortcuts
alias i="incus"
alias il="incus list -c nstP46Sd"
alias ie="incus exec"
alias ii="incus info" #shows snapshots
# incus cloud init
ici() {
  incus exec $* -- cloud-init status
}
# incus termination protection
itp() {
  incus config set $* security.protection.delete true
}
# incus connect
ic() {
  if [[ $* == *"nixos"* ]]; then
    echo "nixos"
    incus exec $* -- bash
  elif [[ $* == *"ubuntu"* ]]; then
    echo "ubuntu"
    incus exec $* -- su --login ubuntu
  else
    echo "other - debian"
    incus exec $* -- su --login debian
  fi
}
# incus show config for container
is(){
  incus config show $*
}

# find biggest filed and directories
alias ducks='du -cks -- * | sort -rn | head'

# exit
# alias q="mkdir -p ~/.tmux-save/; t-save ~/.tmux-save/tsave-`date +%Y%m%d`_`date +%H%M%S`.log; exit;"

# exit with naming parameter
function q ()
{
    if [ -z $1 ]
    then
        ADD_TEXT=''
    else
        ADD_TEXT=$(echo "$*" | sed -r 's|[  ]+|-|g')
    fi
    echo File Suffix: $ADD_TEXT
    mkdir -p ~/.tmux-save/; t-save ~/.tmux-save/tsave-`date +%Y%m%d`_`date +%H%M%S`$ADD_TEXT.log; exit;
}

# history
alias h="history"

# fd-find
alias fd=fdfind

# fail -f
alias tf='tail -f '

# jrnl journal
alias j='jrnl'

# timesheet
alias ts='~/chuboe-backup-private/timesheet/adt.sh'
alias ts-log='cat ~/chuboe-backup-private/timesheet/log.txt'
alias ts-edit='vim ~/chuboe-backup-private/timesheet/log.txt'

# pass find
alias pf='pass find'
# pass quick copy
function p() {
    pass -c $1
}
# pass otp quick copy
function po() {
    pass otp -c $1
}
# pass new/edit
function pe() {
    pass edit $1
}
# pass quick copy from local password store
function pl() {
    PASSWORD_STORE_DIR=$(pwd)/.password-store/ pass -c $1
}
# pass generate random new password but no save to store
pg() { 
	local l=$1
       	[ "$l" == "" ] && l=16
      	tr -dc A-Za-z0-9_ < /dev/urandom | head -c ${l} | xargs | tr -d '\n' | xclip -sel clip
}

# age (cli ecryption)
AGE_KEY_PUB="age1xx6fzh7v5nsmpcfavy9g87tnx5c59uswrxggpnt0jh08q6kxhu6qers2tw"

# save contects of clipboard to file in case needed later
alias xc='xclip -selection clipboard -o > ~/.clip_save'
alias xp='xclip -selection clipboard < ~/.clip_save'

#echo "save-me" | clip
alias clip="tr -d '\n' | xclip -selection clipboard"

# fzf
export FZF_DEFAULT_OPTS="--sort --preview 'bat --style=numbers --color=always --line-range :500 {}' --preview-window='right:60%:wrap'"
export FZF_DEFAULT_OPTS="$FZF_DEFAULT_OPTS --bind='ctrl-k:preview-page-up,ctrl-j:preview-page-down'"
alias z='fzf'
# fzf pass to vim
#alias zv='vim $(fzf --preview "bat --color=always {}")'
ziv() {
    local X=$(fzf)
    if [[ -n $X ]]; then
        vim $X
    fi
}

# always start tmux
# https://unix.stackexchange.com/questions/43601/how-can-i-set-my-default-shell-to-start-up-tmux
#if command -v tmux &> /dev/null && [ -n "$PS1" ] && [[ ! "$TERM" =~ screen ]] && [[ ! "$TERM" =~ tmux ]] && [ -z "$TMUX" ]; then
#  exec tmux
#fi

# source project details
FILE=~/chuboe_project/.bash_chuboe_add
if [ -f "$FILE" ]; then
    source "$FILE"
fi

alias ai='aichat'
alias AI='aichat --'

#aichat bash complete
_aichat_bash() {
    if [[ -n "$READLINE_LINE" ]]; then
        READLINE_LINE=$(aichat -e "$READLINE_LINE")
        READLINE_POINT=${#READLINE_LINE}
    fi
}
bind -x '"\ee": _aichat_bash'

TERM=xterm-256color

# passage
# passage show some-passwd | oathtool --totp --base32 -
alias otp="oathtool --totp --base32 -"

